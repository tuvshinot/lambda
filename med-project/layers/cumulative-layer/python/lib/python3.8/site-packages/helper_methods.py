""" Helper methods for cumulative report lambda """
from datetime import datetime


source_html = """
  <html>
  <head>
  </head>
  <style>
    {style}
  </style>
  <body>
    {header}
    {title_date}
    {patient_info}
    {specs}
    {footer}
  </body>
  </html>"""

css_style = """
  
  @page {
      size: letter portrait;
      margin: 1cm 1cm 2.5cm 1cm;

      @frame footer_frame {
          -pdf-frame-content: footer_content;
          left: 30pt; bottom: 15pt; height: 15pt;
      }
  }

  .hdr {
      margin-bottom: 40px;
    }

    .hdr__location {
      font-weight: 400;
      font-size: 12px;
      line-height: 12px;
      color: black;
    }

    .hdr__name {
      font-weight: 700;
      font-size: 34px;
      line-height: 38px;
      color: #000;
    }

    .hero-title {
      font-weight: bold;
      font-size: 46px;
      line-height: 52px;
      margin-top: 74px;
      margin-bottom: 16px;
    }

    .hero-reportData {
      font-weight: bold;
      font-size: 12px;
      line-height: 16px;
    }

    .hero-reportData span {
      font-weight: 400;
    }

    .patient-title {
      font-weight: bold;
      font-size: 22px;
      line-height: 26px;
      border-bottom: 0.5px solid black;
      padding: 40px 0 8px;
    }

    .patient__table {
      width: 100%;
      margin-top: 16px;
      font-weight: 700;
      font-size: 14px;
      line-height: 16px;
      border-spacing: 0;
    }

    .patient__table td {
      padding-bottom: 8px;
      padding-left: 0;
      width: 50%;
    }

    .patient__table span {
      font-weight: 400;
    }

    .spec {
      margin-top: 75px;
    }

    .spec-header {
      padding-bottom: 34px;
    }

    .spec-title {
      font-weight: bold;
      font-size: 22px;
      border-top: 0.5px solid white;
      border-bottom: 0.5px solid black;
      padding-bottom: 8px;
      padding-top: 50px;
    }

    .spec__box {
      padding-bottom: 8px;
    }
    .spec__box table {
      width: 100%;
      padding-top: 20px;
      text-align: left;
    }

    .spec-info {
      font-weight: bold;
      font-size: 14px;
      line-height: 2px;
      padding-top: 0px;
    }

    .spec p {
      margin-bottom: 24px;
    }

    .spec-comment {
      font-weight: bold;
      font-size: 12px;
      line-height: 10px;
    }

    .spec-comment span,
    .spec-info span,
    .spec__table th {
      font-weight: 400;
    }

    .spec__table{
      font-weight: 400;
      font-size: 12px;
      line-height: 5px;
      width: 100%;
      border-spacing: 0;
      border-collapse: collapse;
    }

    .spec__table tr {
      border-bottom: 0.5px solid rgba(0, 0, 0, 0.25);
    }

    .spec__table td {
      padding: 4px 0;
    }

    .spec__table_name {
      font-weight: bold;
      font-size: 14px;
      line-height: 1px;
      padding-bottom: 16px;
    }

    p {
      font-weight: 400;
      font-size: 14px;
      line-height: 5px;
      margin-top: 6px;
    }

    table td {
      padding-left: 0;
      padding-right: 0;
      text-align: left;
      font-size: 13px;
    }

    table th {
      font-size: 13px;
      text-align: left;
    }"""


def __get_header(lab_location=None, lab_name=None):
  
  if not lab_location:
    lab_location = 'University Medical Center, Dept. of Pathology<br>123 University Way, City, ST 12345'
  
  if not lab_name:
    lab_name = 'LABASOS'

  return """
    <header class="hdr">
      <table style="width: 100%;">
        <tr>
          <td style="width:77%;"></td>
          <td style="height:20px;"><div style="display:block;background-color:#00A3B9;color:#00A3B9;padding-top:5px;">.</div></td>
        </tr>
        <tr style="padding-top:20px;">
          <td>
            <div class="hdr__location">
              {location}
            </div>
          </td>
          <td style="text-align:right;">
            <div class="hdr__name">{name}</div>
          </td>
        </tr>
      </table>
    </header>
  """.format(location=lab_location, name=lab_name)


def __get_title_date(date_time_reported, report_title=None):

  if not report_title:
    report_title = 'Cumulative report'

  return """ 
    <section class="hero">
      <div class="hero-title">{report_title}</div>
      <div class="hero-reportData">Report Date/Time: <span class="reportData">{date_time_reported}</span></div>
    </section>
  """.format(report_title=report_title, date_time_reported=date_time_reported)


def __get_footer(date_time_reported, patient_id=9895646, patient_name='Doe John Q.'):
  return """
    <div id="footer_content">
      <span style="font-size:12px;">Page <pdf:pagenumber></span>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      <span style="font-size:12px;display:inline-block;padding-left:50px;">
      {patient_name} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {patient_id} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {date}</div>
    </div>
  """.format(patient_name=patient_name, patient_id=patient_id, date=date_time_reported)


def __get_patient_info(first_name, last_name, sex, patient_id='987654321', dob='2000-04-16', status='Routine', ordering_dr='Smith, Peter MD'):
  current_year = datetime.now().year
  age = current_year - int(dob.split('-')[0])
  sex = 'M' if sex.lower() == 'male' else 'F'
  dob_iso = dob.split('-')
  dob = '{}/{}/{}'.format(dob_iso[1], dob_iso[2], dob_iso[0])

  return """ 
    <section class="patient">
      <div class="patient-title">Patient info</div>
      <table class="patient__table">
        <tr>
          <td>Name: <span class="full-name">{first_name}, {last_name}.</span></td>
          <td>Status: <span class="status">{status}</span></td>
        </tr>
        <tr>
          <td>Patient ID: <span class="patient-id">{patient_id}</span></td>
          <td>Ordering Dr: <span class="ordering-dr">{ordering_dr}</span></td>
        </tr>
        <tr>
          <td>Age/Sex: <span class="age-sex">{age}/{sex}</span></td>
          <td>DOB: <span class="dob">{dob}</span></td>
        </tr>
      </table>
    </section>
  """.format(first_name=first_name, last_name=last_name, status=status, patient_id=patient_id, 
            ordering_dr=ordering_dr, age=age, sex=sex, dob=dob)
  

def __get_olympus_spec(olympus_data, accession_number, specimen_type, service_request_time, generated_time):

  if not len(olympus_data) == 10:
    raise ValueError('FAIL: Olympus data must be dict with length of 10 items!')

  cut_off_values = {'amphetamine': 1000, 'barbiturates': 200, 
                    'benzodiazepine': 200, 'cocaine': 150, 
                    'methadone': 300, 'opiates': 300, 
                    'oxycodone': 100, 'phencyclidine_pcp': 25, 
                    'thc_cooh': 50, 'ecstacy_mdma': 500}
  
  display_values = {'amphetamine': 'Amphetamine', 'barbiturates': 'Barbiturates', 
                    'benzodiazepine': 'Benzodiazepine', 'cocaine': 'Cocaine', 
                    'methadone': 'Methadone', 'opiates': 'Opiates', 
                    'oxycodone': 'Oxycodone', 'phencyclidine_pcp': 'Phencyclidine(PCP)', 
                    'thc_cooh': 'THC-COOH', 'ecstacy_mdma': 'Ecstacy(MDMA)'}

  test_rows = ''
  for key, value in olympus_data.items():

    try:
      flag = 'L' if float(value) < cut_off_values[key] else 'H'

    except KeyError:
      print('FAIL: Olympus data is missing value! {}'.format(olympus_data))
      raise
    
    except ValueError:
      print('FAIL: Error when parsing concentration! -> {}'.format(value))
      raise

    test_rows += """
        <tr>
          <td style="width: 50%;"><span class="test">{test_name}</span></td>
          <td style="padding-left:5px;"><span>{concentration}</span></td>
          <td style="margin-right:20px;text-align:center;"><p style="background-color:#00A3B9;color:white;">{flag}</p></td>
          <td style="padding-left:15px;"><span>{cut_off_value}</span></td>
          <td style="text-align:center;"><span>ng/mL</span></td>
        </tr>
    """.format(test_name=display_values[key], concentration=value, flag=flag, cut_off_value=cut_off_values[key])


  return """ 
    <section class="spec">
      <div class="spec-header" style="line-height:2px;">
        <div class="spec-title">SPEC # <span class="spec-id">{accession_number}</span></div>
        <div class="spec__box">
          <table>
            <tr>
              <td>
                <div class="spec-info">Collected: <span class="collected">{service_request_time}</span></div>
              </td>
              <td style="text-align: center;">
                <div class="spec-info">Received: <span class="received">{service_request_time}</span></div>
              </td>
              <td style="text-align: right;">
                <div class="spec-info">Reported: <span class="reported">{generated_time}</span></div>
              </td>
            </tr>
          </table>
        </div>

        <div class="spec-info" style="padding:0;padding-bottom:25px;">Specimen: <span class="specimen">{specimen_type}</span></div>

      </div>
      <div class="spec-body">
        <table class="spec__table">
          <tr>
            <th>Drug Name</th>
            <th style="width:15%;">Concentration</th>
            <th style="width:8%;padding-left:5px;">Flag</th>
            <th style="width:15%;padding-left:5px;">Cut Off Value</th>
            <th style="text-align:center;">Units</th>
          </tr>
          {tests}
        </table>
        <p>Flag Key: L— Abnormal Low, H — Abnormal High;</p>
         <div class="spec-comment">
          Comment: <span class="comment">**Critical results Hgb of 7.0 and Hct of 21.1 reported to Dr. J Smith at 15:15 on 2/10/14 by M. Peters</span>
        </div>
      </div>
    </section>""".format(accession_number=accession_number, service_request_time=service_request_time, 
      generated_time=generated_time, specimen_type=specimen_type, tests=test_rows)


def __get_sciex_spec(sciex_data, accession_number, specimen_type, service_request_time, generated_time):
  return """ 
    <section class="spec">
      <div class="spec-header" style="line-height:2px;">
        <div class="spec-title">SPEC # <span class="spec-id">{accession_number}</span></div>
        <div class="spec__box">
          <table>
            <tr>
              <td>
                <div class="spec-info">Collected: <span class="collected">{service_request_time}</span></div>
              </td>
              <td style="text-align: center;">
                <div class="spec-info">Received: <span class="received">{service_request_time}</span></div>
              </td>
              <td style="text-align: right;">
                <div class="spec-info">Reported: <span class="reported">{generated_time}</span></div>
              </td>
            </tr>
          </table>
        </div>

        <div class="spec-info" style="padding:0;padding-bottom:25px;">Specimen: <span class="specimen">{specimen_type}</span></div>

      </div>
      <div class="spec-body">
        <table class="spec__table">
          <tr>
            <th style="width:70%;">Component Name</th>
            <th style="width:30%;text-align:center;">Actual Concentation</th>
          </tr>
          <tr>
            <td style="width:70%;"><span class="test">{component_name}</span></td>
            <td style="width:30%;text-align:center;"><p style="background-color:#00A3B9;color:white;">{actual_concentration}</p></td>
          </tr>
        </table>
         <div class="spec-comment" style="margin-top:20px;">
          Comment: <span class="comment">**Critical results Hgb of 7.0 and Hct of 21.1 reported to Dr. J Smith at 15:15 on 2/10/14 by M. Peters</span>
        </div>
      </div>
    </section>""".format(accession_number=accession_number, service_request_time=service_request_time, generated_time=generated_time, 
    specimen_type=specimen_type, component_name=sciex_data['component_name'], actual_concentration=sciex_data['actual_concentration'],
    calculated_concentration=sciex_data['calculated_concentration'])


def __get_film_array_spec(film_array_data, group_with_result_data, accession_number, specimen_type, service_request_time, generated_time):
  def __get_group_with_items_spec(group_with_results):
    """ Function for building group result spec """

    results = ''
    for result in group_with_results['results']:
      results += """ 
        <tr>
          <td style="width: 70%;"><span class="test">{result_name}</span></td>
          <td style="width:30%;"><p style="background-color:#00A3B9;color:white;text-align:center;">{observation_name}</p></td>
        </tr>
      """.format(result_name=result['result_test_name'], observation_name=result['observation_name'], value_type=result['value_type'])

    return """ 
      <div class="spec__table_name"><b>Group: </b> {group_name}</div>
      <table class="spec__table" style="margin-bottom:25px;">
        <tr>
          <th style="width:70%;">Test Name</th>
          <th style="width:30%;text-align:center;">Observation</th>
        </tr>
        {results}
      </table>
    """.format(group_name=group_with_results['result_group']['result_group_name'], results=results)

  # Building results with group
  results = ''
  for result_data in group_with_result_data:
    results += __get_group_with_items_spec(result_data)

  return """ 
    <section class="spec">
      <div class="spec-header" style="line-height:2px;">
        <div class="spec-title">SPEC # <span class="spec-id">{accession_number}</span></div>
        <div class="spec__box">
          <table>
            <tr>
              <td>
                <div class="spec-info">Collected: <span class="collected">{service_request_time}</span></div>
              </td>
              <td style="text-align: center;">
                <div class="spec-info">Received: <span class="received">{service_request_time}</span></div>
              </td>
              <td style="text-align: right;">
                <div class="spec-info">Reported: <span class="reported">{generated_time}</span></div>
              </td>
            </tr>
          </table>
        </div>

        <div class="spec-info" style="padding:0;padding-bottom:7px;">Specimen: <span class="specimen">{specimen_type}</span></div>
        <div class="spec-info" style="padding:0;padding-bottom:7px;">Name: <span class="ordered">{test_name}</span></div>
        <div class="spec-info" style="padding:0;padding-bottom:22px;">Indentifier: <span class="comments">{test_identifier}</span></div>

      </div>
      <div class="spec-body">
        {results}
        <div class="spec-comment">
          Comment: <span class="comment">**Critical results Hgb of 7.0 and Hct of 21.1 reported to Dr. J Smith at 15:15 on 2/10/14 by M. Peters</span>
        </div>
      </div>
    </section>""".format(accession_number=accession_number, service_request_time=service_request_time, generated_time=generated_time,
                        specimen_type=specimen_type, test_name=film_array_data['test_name'], test_identifier=film_array_data['test_identifier'],
                        results=results)
  